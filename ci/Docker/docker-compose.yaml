version: '3.7'
services:
  postgres:
    user: "1000"
    networks:
      ci_network:
        aliases:
          - postgres
    image: ${DOCKER_REGISTRY}/postgres:9.6.11
    container_name: postgresql
    hostname: postgres
    environment:
      - POSTGRES_DB=artifactory
      - POSTGRES_USER=artifactory
      - POSTGRES_PASSWORD=password
    ports:
      - 5432:5432
    volumes:
      - ${ROOT_DATA_DIR}/ci/configurations/postgres:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    logging:
      driver: json-file
      options:
        max-size: "50m"
        max-file: "10"
    ulimits:
      nproc: 65535
      nofile:
        soft: 32000
        hard: 40000
  artifactory:
    user: "1000"
    networks:
      ci_network:
        aliases:
          - jfrog-art
    image: ${DOCKER_REGISTRY}/jfrog/artifactory-cpp-ce:${ARTIFACTORY_VERSION}
    container_name: artifactory
    hostname: jfrog-art
    volumes:
      - ${ROOT_DATA_DIR}/ci/configurations/artifactory:/var/opt/jfrog/artifactory
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - postgres
    ulimits:
      nproc: 65535
      nofile:
        soft: 32000
        hard: 40000
    environment:
      - JF_ROUTER_ENTRYPOINTS_EXTERNALPORT=${JF_ROUTER_ENTRYPOINTS_EXTERNALPORT}
    ports:
      - ${JF_ROUTER_ENTRYPOINTS_EXTERNALPORT}:${JF_ROUTER_ENTRYPOINTS_EXTERNALPORT} # for router communication
      - 8081:8081 # for artifactory communication
    logging:
      driver: json-file
      options:
        max-size: "50m"
        max-file: "10"
  jenkins:
    user: "0"
    build: Dockerfiles/jenkins
    networks:
      ci_network:
        aliases:
          - jenkins
    image: jenkins/jenkins:lts
    container_name: jenkins
    hostname: jenkins
    environment:
      "JAVA_OPTS": "-Dorg.apache.commons.jelly.tags.fmt.timeZone=Europe/Copenhagen"
    ports:
      - 8080:8080
      - 50000:50000
    # uncomment for docker in docker
    privileged: true
    volumes:
      # enable persistent volume (warning: make sure that the local jenkins_home folder is created)
      - ${ROOT_DATA_DIR}/ci/configurations/jenkins_home:/var/jenkins_home
      - /home/danimtb/:/home/conan/danimtb/
      # mount docker sock and binary for docker in docker (only works on linux)
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/local/bin/docker:/usr/local/bin/docker
  dns-proxy-server:
    networks:
      ci_network:
        aliases:
          - dns.mageddo
    image: defreitas/dns-proxy-server
    container_name: dns.mageddo
    hostname: dns.mageddo
    ports:
      - 5830:5830
    volumes:
      # mount docker sock and binary for docker in docker (only works on linux)
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/resolv.conf:/etc/resolv.conf
networks:
  ci_network: