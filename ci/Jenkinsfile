node {
   checkout scm
   def server
   def client
   def buildInfo
   def uploadSpec
   String serverName

    stage("Get project"){
        git branch: repo_branch, url: repo_url
    }

    def buildImage = docker.image("conanio/gcc6")
    buildImage.inside("--network rt_cont_int") {

        stage("Build project"){
            sh "mkdir -p build"
            dir ('build') {
              sh "cmake -DCMAKE_BUILD_TYPE=Release ../ && cmake --build ."
            }
        }

        stage("Configure Artifactory/Conan"){
            server = Artifactory.server ${env.ARTIFACTORY_NAME}
            client = Artifactory.newConanClient()
            serverName = client.remote.add server: server, ${env.ARTIFACTORY_REPO}
            echo serverName
        }

        stage("Upload binaries"){
            uploadSpec = """{
              "files": [
                {
                  "pattern": "build/bin/*",
                  "target": "conan-local/binaries/"
                }
             ]
            }"""
            server.upload(uploadSpec)
        }

         stage("Get dependencies and publish build info"){
            dir ('build') {
                buildInfo = server.upload uploadSpec
                buildInfo.number = 'v0.${BUILD_NUMBER}' // BUILD_NUMBER is a Jenkins environment variable
                buildInfo.retention maxBuilds: ${env.MAX_BUILDS}
                buildInfo.retention maxDays: ${env.MAX_DAYS}
                server.publishBuildInfo buildInfo
            }
        }

        stage("Test project") {
            node (label: 'slave-rpi') {

            }
        }
    }

}

